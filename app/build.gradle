apply plugin: 'com.android.application'


android {
    compileSdkVersion 24
    buildToolsVersion '25.0.2'

    useLibrary('org.apache.http.legacy')

    dexOptions {
        javaMaxHeapSize "2048"
        preDexLibraries false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        applicationId "com.sai628.jnidemo"
        minSdkVersion 16
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
    }

    buildTypes {
        debug {
            buildConfigField("boolean", "LOG_DEBUG", "true")
            minifyEnabled false
            zipAlignEnabled false
        }
        release {
            buildConfigField("boolean", "LOG_DEBUG", "false")
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            applicationVariants.all {variant ->
                variant.outputs.each {output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk'))
                    {
                        def fileName = "JNIDemo_v${defaultConfig.versionName}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
            aidl.srcDirs = ['src/main/java']
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'MissingTranslation'
    }

    dexOptions {
        preDexLibraries = false
    }

    productFlavors {}
}


repositories {
    flatDir {
        dirs 'libs'
    }
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
}
